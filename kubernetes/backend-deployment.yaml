apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-backend
  namespace: chatbot
  labels:
    app: chatbot-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chatbot-backend
  template:
    metadata:
      labels:
        app: chatbot-backend
    spec:
      containers:
        - name: backend
          image: localhost:5000/chatbot-backend:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: 'production'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: chatbot-secrets
                  key: database-url
            - name: REDIS_HOST
              value: 'redis-service'
            - name: REDIS_PORT
              value: '6379'
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: chatbot-secrets
                  key: jwt-secret
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chatbot-secrets
                  key: openai-api-key
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chatbot-secrets
                  key: anthropic-api-key
          resources:
            limits:
              cpu: '500m'
              memory: '512Mi'
            requests:
              cpu: '100m'
              memory: '256Mi'
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot-backend-service
  namespace: chatbot
  labels:
    app: chatbot-backend
spec:
  selector:
    app: chatbot-backend
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
